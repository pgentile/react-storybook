image: node:10

stages:
  - setup
  - validate
  - build
  - post-validate
  - deploy

install:
  stage: setup
  script: yarn
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: push

lint:
  stage: validate
  before_script: &before_script
    - yarn
  script: "yarn ci:validate:lint"
  cache: &cache
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: pull

test:
  stage: validate
  before_script: *before_script
  script: "yarn ci:validate:test"
  cache: *cache
  artifacts:
    paths:
      - build/coverage

build:
  stage: build
  before_script: *before_script
  script: "yarn ci:build"
  cache: *cache
  artifacts:
    paths:
      - build/storybook

post-validate:
  stage: post-validate
  before_script: *before_script
  script: "yarn ci:post-validate"
  cache: *cache

pages:
  stage: deploy
  only:
    - master
  before_script: *before_script
  script:
    - "cp -r build/storybook/* public/"
    - "gzip -k -6 $(find public -type f -name '*.js')"
    - "gzip -k -6 $(find public -type f -name '*.css')"
    - "gzip -k -6 $(find public -type f -name '*.html')"
    - "gzip -k -6 $(find public -type f -name '*.svg')"
  cache: *cache
  artifacts:
    paths:
      - public

deploy-fake-env:
  stage: deploy
  only:
    - master
  script:
    - "echo Fake depoy"
    - "echo"
    - "env | sort"
    - "echo"
  environment:
    name: stage
